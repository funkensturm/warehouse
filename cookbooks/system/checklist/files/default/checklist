#!/usr/bin/env ruby

class String
  def red()     colored(:red);     end
  def green()   colored(:green);   end
  def yellow()  colored(:yellow);  end
  def blue()    colored(:blue);    end
  def magenta() colored(:magenta); end
  def cyan()    colored(:cyan);    end

  def colored(color)
    code = case color
    when :red     then 31
    when :green   then 32
    when :yellow  then 33
    when :blue    then 34
    when :magenta then 35
    when :cyan    then 36
    end
    self.gsub!('<b>', "\033[1m")
    self.gsub!('</b>', "\033[22m")
    self.gsub!('<blink>', "\033[5m")
    self.gsub!('</blink>', "\033[25m")
    "\033[#{code}m#{self}\033[0m"
  end

  def ucfirst
    self[0,1].upcase + self[1..-1]
  end
end

module Checklist

  class Upstart
    def initialize(name)
      @name = name.to_s
    end

    def running?
      !!`/sbin/status #{@name}`.match('start/running')
    end
  end

  class Daemon
    def initialize(name)
      @name = name
    end

    def running?
      !!system("pgrep #{@name} > /dev/null")
    end
  end

  def self.perform
    log
    zombie_hunt process: 'nginx',        job: 'nginx',     fix: 'Kill the zombie with: sudo /usr/sbin/nginx -s quit'
    zombie_hunt process: 'mysql',        job: 'mysql'
    zombie_hunt process: 'redis-server', job: 'redis',     fix: 'Kill the zombie with: redis-cli shutdown'
    zombie_hunt process: 'memcached',    job: 'memcached', fix: 'Kill the zombie with: /etc/init.d/memcached stop'
    zombie_hunt process: 'mongod',       job: 'mongodb',   fix: 'Kill the zombie with: /etc/init.d/mongodb stop'
    zombie_hunt process: 'postgres',     job: 'postgres',  fix: 'Kill the zombie with: /etc/init.d/postgresql stop'
    zombie_hunt process: 'murmurd',      job: 'murmur',    fix: 'Kill the zombie with: /etc/init.d/mumble-server stop'
    
    log
  end

  def self.zombie_hunt(process: nil, job: nil, fix: nil)
    if Daemon.new(process).running?
      if Upstart.new(job).running?
        log "#{job.ucfirst} is running via upstart.".green
      else
        log "Zombie alarm! #{job.ucfirst} is running but not via upstart. #{fix}".red
      end
    else
      log "#{job.ucfirst} is not running.".yellow
    end
  end

  def self.log(message = nil)
    puts "  #{message}"
  end

end

Checklist.perform
